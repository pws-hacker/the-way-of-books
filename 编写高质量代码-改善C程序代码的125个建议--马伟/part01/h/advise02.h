#include <stdio.h>

using namespace std;

// 建议2: 防止整数类型产生回绕与溢出

// 有符号与无符号整数间的区别在于怎样解释整数的最高位
// C编译程序认为：符号标志为0，则该数为正；符号标志为1，则该数为负

// 负数采用2的补码的形式来表示，即：
/*
	1.对原码各位求反(符号位除外)
	2.再将求反的结果加1
	3.最后将符号位设置为1
	例：在32位操作系统中，有符号整数 -2 的存储方法如下
	1,取绝对值2的二进制编码 00000000 00000000 00000000 00000010
	2.求反                  01111111 11111111 11111111 11111101
	3.求反结果加1			01111111 11111111 11111111 11111110
	4.符号位设置为1			11111111 11111111 11111111 11111110
*/

// 建议2-1 char 类型变量的值应该限制在 signed char 与 unsigned char 的交集范围内
// 优点=获得最大程度的可移植性，同时不会牺牲效率

// 实际上，char 类型存储的是整数而不是字符，为了处理字符，计算机使用一种数字编码的方式来操作
// 默认的 char 类型可以是 signed char 类型(取值范围 -127 ~ 127 ) 也可以是 unsigned char 类型(取值范围 0 ~ 255)

// 建议2-2 使用显式声明为 signed char 或 unsigned char 的类型来执行算数运算
class AdviseTwo
{
public:
	AdviseTwo() {};
	~AdviseTwo() {};

	void test01_error(); 
	void test01_right();

};